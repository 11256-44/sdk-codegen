#!/bin/bash

# This script file creates local links for all the yarn workspaces
# See https://classic.yarnpkg.com/en/docs/cli/link/ for more information

set -e

ROOT_PATH="$( cd "$( dirname "${BASH_SOURCE[0]}" )"/.. >/dev/null 2>&1 && pwd )"

# Construct a package path by name
# e.g. path = $(PackagePath sdk)
PackagePath()
{
  local name=$1

  if [[ $name == "" ]]; then
      echo ERROR: PackagePath needs a package name
      exit 1
  fi

  echo "$ROOT_PATH/packages/$name"
}

# Link a yarn workspace
# e.g. $(Link 'sdk')
Link()
{
  local name=$1
  if [[ $name == "" ]];
  then
      echo ERROR: Link needs a package path
      exit 1
  fi
  local path
  path=$(PackagePath "$name")
  $(cd "$path") || exit 1
  $(yarn link)
  echo path
}

# Create a package reference link for a local package
# e.g. $(LinkPackage scripts "@looker/sdk-codegen")
LinkPackage()
{
  local source=$1
  local ref=$2
  if [[ $source == "" || $ref == "" ]];
  then
      echo ERROR: LinkPackage needs source package name and reference package name
      exit 1
  fi

  local path
  path=$(PackagePath "$source")
  $(cd "$path") || exit 1
  $(yarn link "$ref")
  echo path
}

sources=( utils sdk sdk-codegen test-utils )
for p in "${sources[@]}"
do
  echo "Linking $p"
  $(Link "$p")
done

refs=( @looker/sdk @looker/sdk-codegen @looker/sdk-codegen-utils )
for r in "${refs[@]}"
do
  echo "Referencing $r in test-utils"
  $(LinkPackage test-utils "$r")
done

refs=( @looker/sdk @looker/sdk-codegen-utils )
for r in "${refs[@]}"
do
  echo "Referencing $r in sdk-codegen"
  $(LinkPackage sdk-codegen "$r")
done

# sdk has no local dependencies

# TODO: Luke, this may conflict with a components package name so we'll probably need to rename it
refs=( @looker/sdk @looker/sdk-codegen @looker/sdk-codegen-utils @looker/test-utils )
for r in "${refs[@]}"
do
  echo "Referencing $r in scripts"
  $(LinkPackage scripts "$r")
done

echo Yarn workspace links created successfully

